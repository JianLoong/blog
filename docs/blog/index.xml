<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog on Jian Liew</title>
    <link>https://jianliew.me/blog/blog/</link>
    <description>Recent content in Blog on Jian Liew</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://jianliew.me/blog/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Effective Java</title>
      <link>https://jianliew.me/blog/blog/generics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jianliew.me/blog/blog/generics/</guid>
      <description> Under construction.
 Generics classes A class or interface whose declaration has one or more type parameters is a generic class or interface. Generic classes and interfaces are collectively known as generic types.
One of the best examples would be the list class.
public interface List&amp;lt;E&amp;gt; extends Collection&amp;lt;E&amp;gt; { // methods omitted } You should not do something like this&amp;hellip;
private final Collection stamps = ... ; </description>
    </item>
    
    <item>
      <title>Programming Mentions </title>
      <link>https://jianliew.me/blog/blog/programmming/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jianliew.me/blog/blog/programmming/</guid>
      <description>Posted on - Fri 11 Oct 00:02:42 AEDT 2019
      .svg-container{ width: 80rem; }   let words = &#34;&#34;; let freq = &#34;&#34;; let arr = &#34;&#34;; var stopWords = [ &#39;about&#39;, &#39;after&#39;, &#39;all&#39;, &#39;also&#39;, &#39;am&#39;, &#39;an&#39;, &#39;and&#39;, &#39;another&#39;, &#39;any&#39;, &#39;are&#39;, &#39;as&#39;, &#39;at&#39;, &#39;be&#39;, &#39;because&#39;, &#39;been&#39;, &#39;before&#39;, &#39;being&#39;, &#39;between&#39;, &#39;both&#39;, &#39;but&#39;, &#39;by&#39;, &#39;came&#39;, &#39;can&#39;, &#39;come&#39;, &#39;could&#39;, &#39;did&#39;, &#39;do&#39;, &#39;each&#39;, &#39;for&#39;, &#39;from&#39;, &#39;get&#39;, &#39;got&#39;, &#39;has&#39;, &#39;had&#39;, &#39;he&#39;, &#39;have&#39;, &#39;her&#39;, &#39;here&#39;, &#39;him&#39;, &#39;himself&#39;, &#39;his&#39;, &#39;how&#39;, &#39;if&#39;, &#39;in&#39;, &#39;into&#39;, &#39;is&#39;, &#39;it&#39;, &#39;like&#39;, &#39;make&#39;, &#39;many&#39;, &#39;me&#39;, &#39;might&#39;, &#39;more&#39;, &#39;most&#39;, &#39;much&#39;, &#39;must&#39;, &#39;my&#39;, &#39;never&#39;, &#39;now&#39;, &#39;of&#39;, &#39;on&#39;, &#39;only&#39;, &#39;or&#39;, &#39;other&#39;, &#39;our&#39;, &#39;out&#39;, &#39;over&#39;, &#39;said&#39;, &#39;same&#39;, &#39;see&#39;, &#39;should&#39;, &#39;since&#39;, &#39;some&#39;, &#39;still&#39;, &#39;such&#39;, &#39;take&#39;, &#39;than&#39;, &#39;that&#39;, &#39;the&#39;, &#39;their&#39;, &#39;them&#39;, &#39;then&#39;, &#39;there&#39;, &#39;these&#39;, &#39;they&#39;, &#39;this&#39;, &#39;those&#39;, &#39;through&#39;, &#39;to&#39;, &#39;too&#39;, &#39;under&#39;, &#39;up&#39;, &#39;very&#39;, &#39;was&#39;, &#39;way&#39;, &#39;we&#39;, &#39;well&#39;, &#39;were&#39;, &#39;what&#39;, &#39;where&#39;, &#39;which&#39;, &#39;while&#39;, &#39;who&#39;, &#39;with&#39;, &#39;would&#39;, &#39;you&#39;, &#39;your&#39;, &#39;a&#39;, &#39;i&#39;, &#39;its&#39; ]; // https://stackoverflow.</description>
    </item>
    
    <item>
      <title>Reddit Chart</title>
      <link>https://jianliew.me/blog/blog/percentage/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jianliew.me/blog/blog/percentage/</guid>
      <description>Posted on - Fri 11 Oct 00:02:42 AEDT 2019
 The charts here are visualisation of the AmIthea-hole subreddit which can be found here
The reason this post is made, is so that it would easier to see the percentage of votes of a certain type.
Please note that the posts here are generated based on the Reddit website by doing GET requests. So, it is based on their current entries.</description>
    </item>
    
    <item>
      <title>Prefer for loops</title>
      <link>https://jianliew.me/blog/blog/forloops/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jianliew.me/blog/blog/forloops/</guid>
      <description>Programmers tend to write loops in many different ways. If you first language is C, one of the more interesting things was with the way you would have to declare local variables at the head of the block.
for (Element e : c) { ... // Omitted }</description>
    </item>
    
  </channel>
</rss>