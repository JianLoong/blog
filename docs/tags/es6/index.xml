<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ES6 on Jian Liew</title>
    <link>https://jianliew.me/blog/tags/es6/</link>
    <description>Recent content in ES6 on Jian Liew</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 04 Nov 2019 00:00:00 +1100</lastBuildDate><atom:link href="https://jianliew.me/blog/tags/es6/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>JavaScript Sort Stability</title>
      <link>https://jianliew.me/blog/entries/2019-11/javascriptsort/</link>
      <pubDate>Mon, 04 Nov 2019 00:00:00 +1100</pubDate>
      
      <guid>https://jianliew.me/blog/entries/2019-11/javascriptsort/</guid>
      <description>Sorting is important. Sorting in JavaScript can be quirky. This blog post will be regarding a recent post made by the v8 team regarding the Array.prototype.sort.
 This blog post will demonstrate an example where the stability of a sort becomes important. This situation is normally known as the two-pass sorting, which is a technique commonly used sort two columns. In other words, I would like to use one function to sort one column first and then another function to sort another column.</description>
    </item>
    
  </channel>
</rss>
