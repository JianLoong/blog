<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Interface on Jian Liew</title><link>https://jianliew.me/blog/tags/interface/</link><description>Recent content in Interface on Jian Liew</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 07 Nov 2019 00:00:00 +1100</lastBuildDate><atom:link href="https://jianliew.me/blog/tags/interface/index.xml" rel="self" type="application/rss+xml"/><item><title>Programming to an Interface (Java)</title><link>https://jianliew.me/blog/entries/2019-11/programmingtoaninterface/</link><pubDate>Thu, 07 Nov 2019 00:00:00 +1100</pubDate><guid>https://jianliew.me/blog/entries/2019-11/programmingtoaninterface/</guid><description>A question that often arises is, what is the benefit of programming to an interface? This blog post will attempt to explain why. It is quite common for people to have heard of the term but do not really understand the significance of it.
The most commonly used example is as follows. Notice that in this example, the LHS (Left hand side), is using List while the RHS (Right hand side) is specifying it to be ArrayList.</description></item></channel></rss>