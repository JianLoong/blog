<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Maps on Jian Liew</title><link>https://jianliew.me/blog/tags/maps/</link><description>Recent content in Maps on Jian Liew</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 13 Oct 2019 21:27:45 +1100</lastBuildDate><atom:link href="https://jianliew.me/blog/tags/maps/index.xml" rel="self" type="application/rss+xml"/><item><title>Voronoi Diagram</title><link>https://jianliew.me/blog/blog/october-2019/voronoi/</link><pubDate>Sun, 13 Oct 2019 21:27:45 +1100</pubDate><guid>https://jianliew.me/blog/blog/october-2019/voronoi/</guid><description>One of the most common query when working with maps is the nearest neighbour query. This blog post will use Voronoi Diagrams to explain more regarding the nearest neighbour query.
Below is an example of a Voronoi diagram generated using d3.js.
Voronoi Diagram generated with 30 random points
-- const width = 500, height = 500; const vertices = d3.range(30).map(function(d) { return [Math.random() * width, Math.</description></item></channel></rss>