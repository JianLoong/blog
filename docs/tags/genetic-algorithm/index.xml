<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Genetic Algorithm on Jian Liew</title><link>https://jianliew.me/blog/tags/genetic-algorithm/</link><description>Recent content in Genetic Algorithm on Jian Liew</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 23 Oct 2019 00:00:00 +1100</lastBuildDate><atom:link href="https://jianliew.me/blog/tags/genetic-algorithm/index.xml" rel="self" type="application/rss+xml"/><item><title>Genetic Algorithm</title><link>https://jianliew.me/blog/blog/october-2019/ga/</link><pubDate>Sat, 19 Oct 2019 00:00:00 +1100</pubDate><guid>https://jianliew.me/blog/blog/october-2019/ga/</guid><description>This post is a simple implementation of Genetic Algorithm GA. Here, you would start with a random string and end up with the target string.
This post is heavily inspired based on this website. However, I created the codes with a very different methodology to also include newer JavaScript methods like using classes and etc.
Cross Over Method One Point Two Point Uniform PMX Selection Method Tournament Random Rank Roulette Wheel Target String Run</description></item><item><title>TSP using GA</title><link>https://jianliew.me/blog/blog/october-2019/tsp/</link><pubDate>Wed, 23 Oct 2019 00:00:00 +1100</pubDate><guid>https://jianliew.me/blog/blog/october-2019/tsp/</guid><description>Travelling Salesman Problem using Genetic Algorithm This blog post is regarding using genetic algorithm to solve the Travelling Salesman Problem. In a one liner the TSP asks the following question: Given a list of cities and the distances between each pair of the cities, what is the shortest possible route that visits each city and returns to the origin city?&amp;rdquo;
The conditions in this scenario are that no point can be visited twice and it must return to the starting point.</description></item></channel></rss>