<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>JavaScript on Jian Liew</title><link>https://jianliew.me/blog/tags/javascript/</link><description>Recent content in JavaScript on Jian Liew</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 04 Nov 2019 00:00:00 +1100</lastBuildDate><atom:link href="https://jianliew.me/blog/tags/javascript/index.xml" rel="self" type="application/rss+xml"/><item><title>JavaScript Sort Stability</title><link>https://jianliew.me/blog/entries/2019-11/javascriptsort/</link><pubDate>Mon, 04 Nov 2019 00:00:00 +1100</pubDate><guid>https://jianliew.me/blog/entries/2019-11/javascriptsort/</guid><description>Sorting is important. Sorting in JavaScript can be quirky. This blog post will be regarding a recent post made by the v8 team regarding the Array.prototype.sort.
This blog post will demonstrate an example where the stability of a sort becomes important. This situation is normally known as the two-pass sorting, which is a technique commonly used sort two columns. In other words, I would like to use one function to sort one column first and then another function to sort another column.</description></item><item><title>Promise All</title><link>https://jianliew.me/blog/archive/2019-10/promiseall/</link><pubDate>Fri, 25 Oct 2019 00:00:00 +1100</pubDate><guid>https://jianliew.me/blog/archive/2019-10/promiseall/</guid><description>This post is a an entry to describe a use case when the Promise.all JavaScript method is needed. The official reference can be found here. This assumes that the reader has a basic understanding of how promises work.
Before we start, there is a need to understand how certain RESTful services are structured. For example, the Hacker News API has the end point called topstories. This end point however, does not contain any other information besides a list of item IDs.</description></item></channel></rss>