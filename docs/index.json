[
{
	"uri": "https://jianliew.me/blog/blog/",
	"title": "Blog",
	"tags": [],
	"description": "",
	"content": " This blog is mainly about programming. It will also attempt document various thought process to achieve the desired outcome.\n"
},
{
	"uri": "https://jianliew.me/blog/thepragmatic/rubberduck/",
	"title": "Rubber Duck",
	"tags": ["Debugging", "Rubber Duck"],
	"description": "",
	"content": " This post is under construction.\n Introduction One of the most frustrating thing about teaching programming these days, is that we do not often teach the process of debugging.\nStudents often approach me when they are having an issue in their codes and most often times, I do not directly tell them the answer, but I will spend my time using a process known as rubber ducking while attempting to solve their issue.\n One of my co-workers asked why do I not just tell them the answer? \n My reply to him was, if I was just telling them the answer right away, it is actually pointless because I would be solving the problem for them. I do not want to solve the problem for them. In actual fact, I want to teach them a useful skill where they could arrive to the solution by understanding the problem, thus they would be able to solve the problem with my help but not with me outright giving the answer.\nThere\u0026rsquo;s an old saying\u0026hellip;.\nGive a man a fish, and you'll feed him for a day. Teach a man to fish, and you've fed him for a ife time. - Confucius  Of course, I would save a lot of time by just giving out the solution, but will that be useful for the student in the long term?\nMost students generally have more time at hand than the teaching staff, however most of the times, teaching associates (TA)s find it frustrating when handling and teaching students how to solve a problem due to their own schedules as well. It is my belief that, it is very important to teach students the correct process of debugging and problem solving in this scenario.\nI totally disagree with my co-worker that I should outright give them the solution for their programming issue. However, I think it would also depends on the personality and the method of teaching each individual would have. I think the depth of understanding plays a very important role when attempting to do rubber duck debugging. That very individual does not have much of a programming background but more towards a business background thus the mind set is completely different. I am not trying to victimise that person, however it is merely different point of views.\nWhat is Rubber Duck Debugging? Rubber ducking is a very useful technique for finding the cause of a problem by explaining it someone else. This is one of the techniques I often use when another programmer comes to me and asks for help.\n .firstLevel  rect { fill: pink !important; } .secondLevel  rect { fill:lightblue !important; }  The name origins of the name of the rubber duck is where a programmer would carry around a rubber duck and debug their code by forcing themselves to explain it, line-by-line to the duck.\nInsights are often found by simply describing the problem aloud. - Duck, Quack Overflow  \ngraph TD A(Issue/Problem) B[Why?] C[Who?] D[When?] E[What?] F[Solution] A -- B A -- C A -- D A -- E B -- F C -- F D -- F E -- F class A firstLevel; class B,C,D,E secondLevel;  Rubber Duck Advantage One of the more interesting about rubber duck technique, is that it will allow you to tell another programmer why something should not be done.\n .shadow { box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1); padding-right: 1em; padding-left: 1em; padding-top: 1em; padding-bottom: 0.5em; } .pull-right { text-align:right; }  "
},
{
	"uri": "https://jianliew.me/blog/blog/percentage/",
	"title": "Reddit Chart",
	"tags": ["Reddit", "Chart", "Visualisation"],
	"description": "",
	"content": "  The charts here are visualisation of the AmIthea-hole subreddit which can be found here\nThe reason this post is made, is so that it would easier to see the percentage of votes of a certain type.\nPlease note that the posts here are generated based on the Reddit website by doing GET requests. So, it is based on their current entries.\n    Abbreviation Meaning     YTA You\u0026rsquo;re the A-hole   NTA Not the A-hole   ESH Everyone sucks here   NAH No A-holes here   INFO Not Enough Info    Posts   let summary = []; let parseResult = (link) = { const endPoint = \"https://reddit.com\" + link + \".json?limit=80\u0026jsonp=?\"; let replies = \"\"; $.getJSON(endPoint, function(data){ let title = (data[0].data.children[0].data[\"title\"]); replies = data[1][\"data\"].children; let url = \"https://reddit.com\" + link; let noOfReplies = replies.length; let countNTAAppearance = 0; let nta = \"NTA\"; let countYTAAppearance = 0; let countESHAppearance = 0; let countNAHAppearance = 0; let countINFOAppearance = 0; for (let i = 0; i { let output = \"\" + jsonResult[\"title\"] + \"\"; let out = output + \"Click here to view post in context.\n\"; $(\".result\").append(\"\" + out +\"\"); $(\"#\" + jsonResult[\"id\"] + \"_link\").prop(\"href\", jsonResult[\"url\"]); $(\".result\").append(\"\n\"); let id = \"#\" + jsonResult[\"id\"]; const data = { labels: [\"NTA\",\"YTA\",\"ESH\",\"NAH\",\"INFO\"], datasets: [ { name: \"data\", charType: 'percentage', values: [ jsonResult[\"countNTAAppearance\"], jsonResult[\"countYTAAppearance\"], jsonResult[\"countESHAppearance\"], jsonResult[\"countNAHAppearance\"], jsonResult[\"countINFOAppearance\"], ] } ] } const chart = new frappe.Chart(id, { data: data, type: 'percentage', colors: ['#33691e', '#b71c1c', '#f47e17','#1a237e','#e8eaf6'] }) } let getPost = () = { let result = \"\"; let entries = []; let endPoint = \"https://reddit.com/r/amitheasshole.json?limit=50\u0026jsonp=?\" $.getJSON(endPoint, function(data){ result = data; entries = result[\"data\"].children; for(let i = 0; i  .shadow { box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1); padding-right: 1em; padding-left: 1em; padding-top: 1em; }  "
},
{
	"uri": "https://jianliew.me/blog/teaching/ubuntu/ls/",
	"title": "The File System",
	"tags": ["Shell", "Bash", "Command Line"],
	"description": "",
	"content": " This blog post is under construction.\n This blog entry assumes that the reader has a basic understanding of using the command line and would like to know more. (More specifically using the Bash shell on Ubuntu)\n The Linux File System Directory Architecture. In Linux distributions, the directory structure is defined by the Filesystem hierarchy Standard.1\n .secondLevel  rect { fill:lightblue !important; }  graph TD R( / ) L1A( /bin ) L1AA( /etc ) L1B( /proc ) L1C[ /boot ] L1D[ /root ] L1E[ /dev ] L1F( /home ) L1G( /usr ) L2A( /jian ) L2B( /tim ) L2C( /kevin ) L2D( /bin ) R -- L1A R -- L1AA R -- L1B R -- L1C R -- L1D R -- L1E R -- L1F R -- L1G L1F -- L2A L1F -- L2B L1F -- L2C L1G -- L2D style R fill:#FFFFFF class L1A,L1AA,L1B,L1C,L1D,L1E,L1F,L1G secondLevel;  This diagram shows how the file system looks like on an Ubuntu machine. The first and top most directory is called the root directory. This directory is denoted as the / (forward slash) symbol. The reason for this is because it can be thought off as the trunk of a tree. The directory entry itself has no name. The name of it is the empty part before the initial directory separator.\n   Directory Purpose     / - First directory and the root of the entire file system hierarchy - Contains all other directories   /bin - Contains commands that may be used by both the system administrators and by users - There must be no subdirectories in here.   /boot - The operating system kernel is located here.   /etc - Contains configuration files. Configuration file is a local file that is used to control the operation of a program. It must be static and cannot be an executable binary.   /home - This directory contains user\u0026rsquo;s home directories. Generally, each user would have a separate directory with their username under this directory.    Even though /home is a standard concept, the setup will differ from host to host. Therefore it is important that no program should assume any specific location for a home directory, rather it should query for it.\n On Ubuntu, you will notice another directory called /root, however, this is not the root directory. It is actually the home directory of the superuser.\n Your home directory. What is a pathname? There are two types of path names.\ngraph TD linkStyle default interpolate linear R(Pathname) P1(Absolute Path) P2(Relative Path) R -- P1 R -- P2 style P1 fill:skyblue; style P2 fill:skyblue;  The man pages There are several ways in which users obtain help. One of the most well known way would be to use the man pages. However, these days most people do not use the man pages anymore.\n$ man For example, if you want to take a look at the man pages for the ls command, you will just need to do\n$ man ls The ls command List in long format all the files and directories in your home directory.\nAnswer\n$ ls -l The main challenge of this question is so that students understand how to use the ls command.\nThere are several points to take note in this question. For example, what is the meaning of long format? What does it mean by all files and directories?\nOne interesting thing is that most people do not know that the ls command can actually be given a file.\nSo, the various accepted answers for this question are\n$ ls -l $ ls --all -l $ ls -al List in long format all the files and directories (top-level only) in the /usr/local directory, sorted by the time of last modification.\n$ ls -lt /usr/local One interesting thing about Ubuntu is the way it manages time. For example, if you use the command stat on a file.\n File: examples.desktop Size: 8980 Blocks: 24 IO Block: 4096 regular file Device: 10306h/66310d Inode: 3145732 Links: 1 Access: (0644/-rw-r--r--) Uid: ( 1000/ jian) Gid: ( 1000/ jian) Access: 2019-10-09 08:43:17.558138350 +1100 Modify: 2018-10-29 21:38:37.957796856 +1100 Change: 2018-10-29 21:38:37.957796856 +1100 Birth: -  Challenge 3\nCreate the following directory structure.\ngraph TD S( Your Home Directory ) A( monash ) B( personal ) C( documents ) D( data ) E( temp ) F( documents ) S -- A S -- B A -- C A -- D A -- E B -- F  In order to create the directory structure, there are several ways. One way to do is would be to use several mkdir commands.\n$ mkdir monash $ mkdir personal $ mkdir monash/documents $ mkdir monash/data $ mkdir monash/temp $ mkdir personal/documents However, you can achieve the same result by using a single mkdir command. At the end of the day if you look at the manual for mkdir, it does mention that it can be used to create directories.\n$ mkdir -p monash personal monash/documents monash/data monash/temp personal/documents Change into the ~/monash/temp directory. The special character ~ means \u0026ldquo;a shortcut to your home directory\u0026rdquo;\nChange into your home directory. How many ways can you do this?\n$ cd ~ $ cd $ cd $HOME References 1. Wikipedia Filesystem Hierarchy Standard\n"
},
{
	"uri": "https://jianliew.me/blog/thepragmatic/",
	"title": "Pragmatic Programmer",
	"tags": [],
	"description": "",
	"content": " Programming is a Craft As a programmer, you are part listener, part advisor, part listener, part advisor, part interpreter, and part dictator.1\nWe try to capture requirements and express them so that a machine can do it justice.\n1. The Pragmatic Programmer\n"
},
{
	"uri": "https://jianliew.me/blog/blog/programmming/",
	"title": "Reddit Word Cloud ",
	"tags": ["Reddit", "Chart", "Visualisation"],
	"description": "",
	"content": "  The word cloud generated here is based on the /r/programming subreddit for reddit.com\nThe reason this post is made, is so that it would easier to see the word that appeared the most for the day.\nEven though the use of a word cloud is not exactly a good representation of occurrence, it still looks nice.\n Please note that the posts here are generated based on the Reddit website by doing GET requests. So, it is based on their current entries. So, it will be refreshed when the page is reloaded.\n \n // Based on http://bl.ocks.org/joews/9697914 with modifications. let words = \"\"; let freq = \"\"; let arr = \"\"; var stopWords = [ 'about', 'after', 'all', 'also', 'am', 'an', 'and', 'another', 'any', 'are', 'as', 'at', 'be', 'because', 'been', 'before', 'being', 'between', 'both', 'but', 'by', 'came', 'can', 'come', 'could', 'did', 'do', 'each', 'for', 'from', 'get', 'got', 'has', 'had', 'he', 'have', 'her', 'here', 'him', 'himself', 'his', 'how', 'if', 'in', 'into', 'is', 'it', 'like', 'make', 'many', 'me', 'might', 'more', 'most', 'much', 'must', 'my', 'never', 'now', 'of', 'on', 'only', 'or', 'other', 'our', 'out', 'over', 'said', 'same', 'see', 'should', 'since', 'some', 'still', 'such', 'take', 'than', 'that', 'the', 'their', 'them', 'then', 'there', 'these', 'they', 'this', 'those', 'through', 'to', 'too', 'under', 'up', 'very', 'was', 'way', 'we', 'well', 'were', 'what', 'where', 'which', 'while', 'who', 'with', 'would', 'you', 'your', 'a', 'i', 'its', 'why' ]; // https://stackoverflow.com/questions/5631422/stop-word-removal-in-javascript function remove_stopwords(str) { res = [] words = str.split(' ') for(i=0;ib.size - a.size); sorted = sorted.slice(0, 50); for(let i = 0; i { let result = \"\"; let endPoint = \"https://reddit.com/r/programming.json?limit=1000\u0026jsonp=?\" $.getJSON(endPoint, function(data){ result = data; let entries = result[\"data\"].children; for(let i = 0; i "
},
{
	"uri": "https://jianliew.me/blog/teaching/ubuntu/",
	"title": "Ubuntu",
	"tags": [],
	"description": "",
	"content": " Command Line This blog post is under construction.\n The entries in this blog are based on materials for the Computer Architecture \u0026amp; Operating Systems Unit done at the Masters level.\nThis unit is not done in the traditional manner but it focuses heavily on understanding and using the command line.\nSince this unit will no longer be offered, this blog post will serve as a reminder what the basic commands taught in this unit.\n"
},
{
	"uri": "https://jianliew.me/blog/teaching/uml/",
	"title": "UML",
	"tags": [],
	"description": "",
	"content": " Unified Modelling Language State Machines What are state machines?\ngraph LR A(Open) B(Close) A--B  "
},
{
	"uri": "https://jianliew.me/blog/teaching/uml/introduction/",
	"title": "What are State Machine Diagrams?",
	"tags": ["UML", "State Machine", "State Chart"],
	"description": "",
	"content": " Posted - Tue 8 Oct 07:49:09 AEDT 2019\nThis blog post is incomplete.\n This blog entry assumes that the reader has a basic understanding of UML diagrams and would wish to understand more regarding state machine diagrams.\n Introduction This article is written based on my teaching experiencing in Monash University Australia (Faculty of Information Technology) for the unit Software Engineering.\nOften times, one of the most misunderstood diagram in UML is the state machine. These are also called state charts at times, as we often use terms interchangeably. The semantical difference between two of these diagrams are miniscule at best.\n .cssClass  circle { fill:black !important; stroke:gray !important; stroke-width:3 !important; }  graph LR S(( )) A(Open) B(Close) E(( )) S--A A--B B--E style S fill:#000000 class E cssClass  A simple initial state chart for the state of a door.\nIn fact, for most people, UML is perceived to be something that is not very useful in the development world. The main reason, is because the lack of understanding how the diagrams would relate to a real world application. When I first learn about UML state machines, I often confuse it with other diagrams like the flow chart as well as the activity diagram. I would also question its usefulness. Over time, I realised that it is the most useful diagrams in UML. I would rank it second in terms of importance, the first spot being the class diagram itself.\nI will attempt to explain why in this blog post.\nRemember that at the end of the day, diagrams are very useful to gain a better understanding of the system. As the saying goes, a picture tells a thousand words. The very first thing to understand is that a state chart is a dynamic modelling technique. It focuses on identifying the behavior of your system, specific to instances of a single class. 1\nThe main keywords here are\n A Single Class Dynamic  Let\u0026rsquo;s try to understand these keywords in more details.\nA single class The key features of a state machine, is that it used to model a specific instance of a single class. This concept is at utmost importance when dealing with state diagrams. Not two classes, not three classes but a single class. Before we move on, lets see an example of a class diagram for now. Remember that normally the construction of a state diagram happens after the class diagram.\ngraph LR A[Student] B[Unit] A -- B  A simple class diagram. (Initial level)\nThe example above is a simplification of what a class diagram is at its very basic nature. Two classes, Student and Unit and the Student class using the Unit class.\npublic class Student { private String firstName; private String lastName; private Unit unit; // Other methods omitted.. }public class Unit { private String name; private String description; // Other methods omitted.. } So, where does the state machine come into the picture in this situation? Since the state machine diagram aims to model a single class. Which class would we model here? Do we model both of them or just one? The answer is pretty simple, we actually attempt to do a state chart of all of the classes.\nSince based on the diagram, the Student class is using the Unit class, we should start modelling the state chart from the Unit class. The very first steps when drawing the state machine diagram would be to list out all the possible states.\nRemember that the objective of modelling is always to understand the system in more detailed view. We would also like to understand requirements better. This can be achieved in real life by talking to the real clients and users. If it is a fictional scenario, assumptions would then be made.\n The more intellectually stimulating steps is probably where you list out the possible states in a state chart.\nSo, lets say the possible states of a Unit are\n Offered Not offered  graph LR S(( )) A(Offered) B(Not Offered) E(( )) S--A A--B B--E style S fill:#000000 class E cssClass  However, if you continue the thought process, there are probably more states which can only be derived by understanding the requirements further.\nFor example, if we apply the concept of 4W1H, we will attempt to understand more regarding the requirements itself.\n   Category Question     Who ?   Where ?   When ?   How ?    Dynamic One of the biggest difference regarding state diagrams in comparison to the other diagrams in UML is that it attempts to model the dynamic nature of a system. In comparison to the other diagrams, state machine diagrams can model something which is not captured by the class diagram, as well as the use case diagram.\nIt is very important to understand that over time, the state of a class changes. In the semantical sense, dynamic conveys the meaning of (of a process or system) characterised by constant change, activity, or progress.\ngraph LR S(( )) A(Offered) B(Not Offered) E(( )) S--A A--B B--E style S fill:#000000 class E cssClass  So, if we take a look at our current state chart, what we would like to know is, how does it shift from one state into another state.\nDiagrams P.S. - The real reason I wanted to make to blog post, is actually just to use mermaid diagrams.\nReferences 1. UML 2 State Machine Diagrams: An Agile Introduction\n"
},
{
	"uri": "https://jianliew.me/blog/blog/hk/",
	"title": "Sentiment Analysis",
	"tags": ["Reddit", "Chart", "Visualisation", "Hong Kong", "Percentage"],
	"description": "",
	"content": "  Sentiment Analysis for the Sub-Reddit \u0026ldquo;HongKong\u0026rdquo; This post will perform sentiment analysis using AFINN. AFINN is a list of words rated for valence rated with an integer between minus five(negative) and plus five (positive). This implementation uses AFINN-en-165. 1\nThis approach however is a very naive approach as it does not build any models to determine the context of the usage of the word itself.\nPlease note that the posts here are generated based on the Reddit website by doing GET requests. So, it is based on their current entries. So, it will be refreshed when the page is reloaded.\n References 1. AFINN Sentiment Analysis\n   var stopWords = [ 'about', 'after', 'all', 'also', 'am', 'an', 'and', 'another', 'any', 'are', 'as', 'at', 'be', 'because', 'been', 'before', 'being', 'between', 'both', 'but', 'by', 'came', 'can', 'come', 'could', 'did', 'do', 'each', 'for', 'from', 'get', 'got', 'has', 'had', 'he', 'have', 'her', 'here', 'him', 'himself', 'his', 'how', 'if', 'in', 'into', 'is', 'it', 'like', 'make', 'many', 'me', 'might', 'more', 'most', 'much', 'must', 'my', 'never', 'now', 'of', 'on', 'only', 'or', 'other', 'our', 'out', 'over', 'said', 'same', 'see', 'should', 'since', 'some', 'still', 'such', 'take', 'than', 'that', 'the', 'their', 'them', 'then', 'there', 'these', 'they', 'this', 'those', 'through', 'to', 'too', 'under', 'up', 'very', 'was', 'way', 'we', 'well', 'were', 'what', 'where', 'which', 'while', 'who', 'with', 'would', 'you', 'your', 'a', 'i', 'its', 'why' ]; // https://stackoverflow.com/questions/5631422/stop-word-removal-in-javascript let parseResult = (link) = { const endPoint = \"https://reddit.com\" + link + \".json?limit=100\u0026jsonp=?\"; let replies = \"\"; let noOfReplies = 0; $.getJSON(endPoint, function(data){ let title = (data[0].data.children[0].data[\"title\"]); replies = data[1][\"data\"].children; let url = \"https://reddit.com\" + link; noOfReplies = replies.length; let repliesText = \"\"; let result = { \"id\" : data[0].data.children[0].data[\"id\"], \"url\": url, \"title\": title, \"negative\": 0, \"neutral\": 0, \"positive\": 0 } for (let i = 0; i 0: result[\"positive\"] = result[\"positive\"] + 1; break; case score { let output = \"\" + jsonResult[\"title\"] + \"\"; let out = output + \"Click here to view post in context.\n\"; $(\".result\").append(\"\" + out +\"\"); $(\"#\" + jsonResult[\"id\"] + \"_link\").prop(\"href\", jsonResult[\"url\"]); $(\".result\").append(\"\n\"); let id = \"#\" + jsonResult[\"id\"]; const data = { labels: [\"Positive\",\"Negative\",\"Neutral\"], datasets: [ { name: \"data\", charType: \"percentage\", values: [ jsonResult[\"positive\"], jsonResult[\"negative\"], jsonResult[\"neutral\"] ] } ] } const chart = new frappe.Chart(id, { data: data, type: 'percentage', colors: ['#33691e', '#b71c1c','#e8eaf6'] }) } let buildFreq = (repliesText) = { if (repliesText === undefined) return 0; let convert = repliesText.replace(/[^\\w\\s]/gi, '').toLowerCase().split(\" \"); let totalScore = 0; for(let i = 0; i { let result = \"\"; let entries = []; let endPoint = \"https://reddit.com/r/hongkong.json?limit=30\u0026jsonp=?\" $.getJSON(endPoint, function(data){ result = data; entries = result[\"data\"].children; for(let i = 0; i  .shadow { box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1); padding-right: 1em; padding-left: 1em; padding-top: 1em; }  "
},
{
	"uri": "https://jianliew.me/blog/teaching/",
	"title": "Teaching",
	"tags": [],
	"description": "",
	"content": " Teaching This blog post is under construction.\n "
},
{
	"uri": "https://jianliew.me/blog/blog/topstories/",
	"title": "Hacker News Word Cloud ",
	"tags": ["Hacker News", "Chart", "Visualisation"],
	"description": "",
	"content": "  The word cloud generated here is based on the website hacker news.\nThe reason this post is made, is so that it would easier to see the word that appeared the most for the day.\nEven though the use of a word cloud is not exactly a good representation of occurrence, it still looks nice.\nPlease note that the posts here are generated based on the Hacker News API by doing GET requests. So, it is based on their current entries. So, it will be refreshed when the page is reloaded.\n   // Based on http://bl.ocks.org/joews/9697914 with modifications. let words = \"\"; let freq = [\"\"]; let arr = \"\"; var stopWords = [ 'about', 'after', 'all', 'also', 'am', 'an', 'and', 'another', 'any', 'are', 'as', 'at', 'be', 'because', 'been', 'before', 'being', 'between', 'both', 'but', 'by', 'came', 'can', 'come', 'could', 'did', 'do', 'each', 'for', 'from', 'get', 'got', 'has', 'had', 'he', 'have', 'her', 'here', 'him', 'himself', 'his', 'how', 'if', 'in', 'into', 'is', 'it', 'like', 'make', 'many', 'me', 'might', 'more', 'most', 'much', 'must', 'my', 'never', 'now', 'of', 'on', 'only', 'or', 'other', 'our', 'out', 'over', 'said', 'same', 'see', 'should', 'since', 'some', 'still', 'such', 'take', 'than', 'that', 'the', 'their', 'them', 'then', 'there', 'these', 'they', 'this', 'those', 'through', 'to', 'too', 'under', 'up', 'very', 'was', 'way', 'we', 'well', 'were', 'what', 'where', 'which', 'while', 'who', 'with', 'would', 'you', 'your', 'a', 'i', 'its', 'why', '', 'ask','hn','s' ]; // https://stackoverflow.com/questions/5631422/stop-word-removal-in-javascript function remove_stopwords(str) { res = [] words = str.split(' ') for(i=0;ib.size - a.size); console.log(sorted); sorted = sorted.slice(0, 50); for (let i = 0; i response.json()) }; // Request both students and scores in parallel and return a Promise for both values. // `Promise.all` returns a new Promise that resolves when all of its arguments resolve. function getStudentsAndScores(){ // Create array of promises. let promiseArray = []; for(let i = 1; i { // both have loaded! //console.log(result); // Now we can process it. let titles = []; for(let i = 0; i "
},
{
	"uri": "https://jianliew.me/blog/tags/chart/",
	"title": "Chart",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://jianliew.me/blog/",
	"title": "Contents",
	"tags": [],
	"description": "",
	"content": " Hello!   I am Jian.\nWelcome to my blog!\nFor the past 2.5 years, I have been working as a Teaching Associate with Monash University. I have taught both at the undergraduate level as well as postgraduate level. Overall, I have assisted over 100 students every semester to understand the course material and taught them how to apply critical thinking to every aspect of their studies.\nIt is my personal belief that, it is more important for a student to understand the underlying concepts before approaching a problem. Understanding how to solve a problem takes precedence over making the same mistakes over and over again just to see what will work.\nSubjects taught This is the list of the subjects that I have been involved in to date.\n   Unit Code Name Technology Stack     FIT1010 Introduction to Software Engineering Java7, Python 3, UML   FIT5032 Internet Applications Development ASP.NET MVC, C#, HTML5, JavaScript   FIT5042 Enterprise Application Development for the Web JEE, JSF, XHTML   FIT5120 Industry Experience Project Various Frameworks   FIT5136 Software Engineering Java7, UML   FIT5140 Advance Mobile Systems Swift, Python, RaspberryPi   FIT9131 Programming Foundations Java7   FIT9134 Computer Architecture and Operating Systems Shell Scripting, Bash, Ubuntu   FIT9135 Data Communications WireShark, Core Network Emulator    Nominations \u0026amp; Awards  Studio Mentor for FIT5120 Industry Experience Project. Worked closely with four teams of students to develop applications based on the suggestion of MYOB mentors. Teaching Excellence Nominee for multiple subjects.   let result = \"\"; let endPoint = \"https://programming-quotes-api.herokuapp.com/quotes/random\" $.getJSON(endPoint, function(data){ result = data; let text = \"\\\"\" + result[\"en\"] + \"\\\"\" + \"- \" + result[\"author\"] + \"\n\"; $(\"#quote\").html(text); });   .shadow { box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1); padding-right: 1em; padding-left: 1em; padding-top: 1em; padding-bottom: 0.5em; } .pull-right { text-align:right; }  "
},
{
	"uri": "https://jianliew.me/blog/tags/debugging/",
	"title": "Debugging",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://jianliew.me/blog/tags/hacker-news/",
	"title": "Hacker News",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://jianliew.me/blog/tags/rubber-duck/",
	"title": "Rubber Duck",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://jianliew.me/blog/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://jianliew.me/blog/tags/visualisation/",
	"title": "Visualisation",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://jianliew.me/blog/tags/hong-kong/",
	"title": "Hong Kong",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://jianliew.me/blog/tags/percentage/",
	"title": "Percentage",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://jianliew.me/blog/tags/reddit/",
	"title": "Reddit",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://jianliew.me/blog/tags/bash/",
	"title": "Bash",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://jianliew.me/blog/tags/command-line/",
	"title": "Command Line",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://jianliew.me/blog/cv/",
	"title": "Curriculum Vitae",
	"tags": [],
	"description": "",
	"content": " Summary A passionate educator and technology lover with excellent programming and communication skills. Organized and driven with the innate ability to stay on the task.\nTeaching Experience Monash University, Melbourne (April 2015 - Current) Sessional Lecturer \u0026amp; Teaching Associate (Sessional)\nSubjects previously taught includes:\n   Unit Code Name     FIT1010 Introduction to Software Engineering   FIT5032 Internet Applications Development   FIT5042 Enterprise Web Applications   FIT5120 Industry Experience Project   FIT5136 Software Engineering   FIT9131 Programming Foundations in Java   FIT9134 Computer Architecture and Operating Systems   FIT9135 Data Communications    Key responsibilities  Confidently assist students to become independent and collaborative learners during each studio session by encouraging participation as well as the motivation to learn from each other. Provide laboratory instructions, accessing student performance, tutoring students and determining course grades by advising students to always understand the materials before approaching a problem scenario. Participate in examination markings and the evaluation of final grades of each student.  Achievements  Teaching Excellence Award Nominee for multiple subjects. Consistently achieving a Student Evaluation of Teaching and Units (SETU) score of 4 and above for each subject taught. Successfully mentored four teams to complete the industry experience project (FIT5120) subjects done in cooperation with Monash University and mentors from MYOB.  Education Master of Information Technology (Professional) - Monash University  Completed a thesis titled \u0026ldquo;Category R-tree\u0026rdquo; under the supervision of Assoc. Prof. David Taniar Faculty of Information Technology Merit Scholarship  Bachelor of Computer Science \u0026amp; Software Engineering - Swinburne University  Graduated with First Class Honors Swinburne University of Technology Merit Scholarship  "
},
{
	"uri": "https://jianliew.me/blog/disclaimer/",
	"title": "Disclaimer",
	"tags": [],
	"description": "",
	"content": "This web site is not authorised by Monash University and that any opinions expressed on the pages are those of the author and not those of the University.\n"
},
{
	"uri": "https://jianliew.me/blog/tags/shell/",
	"title": "Shell",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://jianliew.me/blog/tags/state-chart/",
	"title": "State Chart",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://jianliew.me/blog/tags/state-machine/",
	"title": "State Machine",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://jianliew.me/blog/timeline/",
	"title": "Time Line",
	"tags": [],
	"description": "",
	"content": " "
},
{
	"uri": "https://jianliew.me/blog/tags/uml/",
	"title": "UML",
	"tags": [],
	"description": "",
	"content": ""
}]