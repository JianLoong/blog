<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Contents on Jian Liew</title>
    <link>https://jianliew.me/blog/</link>
    <description>Recent content in Contents on Jian Liew</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://jianliew.me/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Rubber Duck</title>
      <link>https://jianliew.me/blog/thepragmatic/rubberduck/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jianliew.me/blog/thepragmatic/rubberduck/</guid>
      <description> Programming Under construction.
 </description>
    </item>
    
    <item>
      <title>The File System</title>
      <link>https://jianliew.me/blog/teaching/ubuntu/ls/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jianliew.me/blog/teaching/ubuntu/ls/</guid>
      <description>This blog post is under construction.
 This blog entry assumes that the reader has a basic understanding of using the command line and would like to know more. (More specifically using the Bash shell on Ubuntu)
 The Linux File System Directory Architecture. In Linux distributions, the directory structure is defined by the Filesystem hierarchy Standard.1
 .secondLevel  rect { fill:lightblue !important; }  graph TD R( / ) L1A( /bin ) L1AA( /etc ) L1B( /proc ) L1C[ /boot ] L1D[ /root ] L1E[ /dev ] L1F( /home ) L1G( /usr ) L2A( /jian ) L2B( /tim ) L2C( /kevin ) L2D( /bin ) R -- L1A R -- L1AA R -- L1B R -- L1C R -- L1D R -- L1E R -- L1F R -- L1G L1F -- L2A L1F -- L2B L1F -- L2C L1G -- L2D style R fill:#FFFFFF class L1A,L1AA,L1B,L1C,L1D,L1E,L1F,L1G secondLevel;  This diagram shows how the file system looks like on an Ubuntu machine.</description>
    </item>
    
    <item>
      <title>Prefer for loops</title>
      <link>https://jianliew.me/blog/effectivejava/forloops/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jianliew.me/blog/effectivejava/forloops/</guid>
      <description>Programmers tend to write loops in many different ways. If you first language is C, one of the more interesting things was with the way you would have to declare local variables at the head of the block.
for (Element e : c) { ... // Omitted }</description>
    </item>
    
    <item>
      <title>What are State Machine Diagrams?</title>
      <link>https://jianliew.me/blog/teaching/uml/introduction/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jianliew.me/blog/teaching/uml/introduction/</guid>
      <description>Posted - Tue 8 Oct 07:49:09 AEDT 2019
This blog post is incomplete.
 This blog entry assumes that the reader has a basic understanding of UML diagrams and would wish to understand more regarding state machine diagrams.
 Introduction This article is written based on my teaching experiencing in Monash University Australia (Faculty of Information Technology) for the unit Software Engineering.
Often times, one of the most misunderstood diagram in UML is the state machine.</description>
    </item>
    
    <item>
      <title>What are Class Diagrams?</title>
      <link>https://jianliew.me/blog/teaching/uml/classdiagram/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jianliew.me/blog/teaching/uml/classdiagram/</guid>
      <description> This blog post is under construction.
 </description>
    </item>
    
    <item>
      <title>Version Control</title>
      <link>https://jianliew.me/blog/thepragmatic/versioncontrol/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jianliew.me/blog/thepragmatic/versioncontrol/</guid>
      <description>Before we start, there is a need to know that &amp;hellip;.
Shared Directories are NOT Version Control
 It is common to store source codes using Google Drive, DropBox or OneDrive. However, this is actually not a good practice at all.
Whenever we are programming, one of the most common feature that we often look out for would be the undo key. The problem with the undo key that it is not a time machine.</description>
    </item>
    
    <item>
      <title>Curriculum Vitae</title>
      <link>https://jianliew.me/blog/cv/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jianliew.me/blog/cv/</guid>
      <description>Summary A passionate educator and technology lover with excellent programming and communication skills. Organized and driven with the innate ability to stay on the task.
Teaching Experience Monash University, Melbourne (April 2015 - Current) Sessional Lecturer &amp;amp; Teaching Associate (Sessional)
Subjects previously taught includes:
   Unit Code Name     FIT1010 Introduction to Software Engineering   FIT5032 Internet Applications Development   FIT5042 Enterprise Web Applications   FIT5120 Industry Experience Project   FIT5136 Software Engineering   FIT9131 Programming Foundations in Java   FIT9134 Computer Architecture and Operating Systems   FIT9135 Data Communications    Key responsibilities  Confidently assist students to become independent and collaborative learners during each studio session by encouraging participation as well as the motivation to learn from each other.</description>
    </item>
    
    <item>
      <title>Disclaimer</title>
      <link>https://jianliew.me/blog/disclaimer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jianliew.me/blog/disclaimer/</guid>
      <description>This web site is not authorised by Monash University and that any opinions expressed on the pages are those of the author and not those of the University.</description>
    </item>
    
  </channel>
</rss>