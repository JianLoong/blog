<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>November 2019 on Jian Liew</title><link>https://jianliew.me/blog/entries/2019-11/</link><description>Recent content in November 2019 on Jian Liew</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 09 Nov 2019 00:00:00 +1100</lastBuildDate><atom:link href="https://jianliew.me/blog/entries/2019-11/index.xml" rel="self" type="application/rss+xml"/><item><title>Nested Data in Documents (FireStore)</title><link>https://jianliew.me/blog/entries/2019-11/firestore/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jianliew.me/blog/entries/2019-11/firestore/</guid><description>Introduction When using Google Firestore, there is a need to put some thought into the way the data is structure. Each option would have an advantage or limitations depending on the use case.
With JSON being everywhere, there are times when there is a need to figure out how to structure data in the Cloud Firestore.
Here are a few common options.
Nested data in documents Subcollections Root-level The most important thing to remember that there is no perfect solution for structuring a Cloud Firestore database.</description></item><item><title>Singleton &amp; Observer Pattern (Java)</title><link>https://jianliew.me/blog/entries/2019-11/singletonobserverpattern/</link><pubDate>Sun, 03 Nov 2019 00:00:00 +1100</pubDate><guid>https://jianliew.me/blog/entries/2019-11/singletonobserverpattern/</guid><description>This blog post will demonstrate a simple use case where the singleton and observable design pattern becomes important.
Let's imagine if you are in the arcade and there is a Lucky Dip Machine. The reason I like call it the LuckyDipMachine is because it is one of the feature assignments in the Programming Foundation Units in Monash University and it is often times made fun at. However, the solution for assignment itself can be engineered to be better.</description></item><item><title>JavaScript Sort Stability</title><link>https://jianliew.me/blog/entries/2019-11/javascriptsort/</link><pubDate>Mon, 04 Nov 2019 00:00:00 +1100</pubDate><guid>https://jianliew.me/blog/entries/2019-11/javascriptsort/</guid><description>Sorting is important. Sorting in JavaScript can be quirky. This blog post will be regarding a recent post made by the v8 team regarding the Array.prototype.sort.
This blog post will demonstrate an example where the stability of a sort becomes important. This situation is normally known as the two-pass sorting, which is a technique commonly used sort two columns. In other words, I would like to use one function to sort one column first and then another function to sort another column.</description></item><item><title>Min and Max value of an Array (Java)</title><link>https://jianliew.me/blog/entries/2019-11/minmax/</link><pubDate>Wed, 06 Nov 2019 00:00:00 +1100</pubDate><guid>https://jianliew.me/blog/entries/2019-11/minmax/</guid><description>There are many ways to obtain the min and maximum value of items inside of an Array. This blog post will show case its many ways.
The most basic way to do this is to loop through the entire array manually. The benefit of doing it this way, is that it just relies on the standard library and can be easily rewritten to an even simpler form. This way uses the Math.</description></item><item><title>Programming to an Interface (Java)</title><link>https://jianliew.me/blog/entries/2019-11/programmingtoaninterface/</link><pubDate>Thu, 07 Nov 2019 00:00:00 +1100</pubDate><guid>https://jianliew.me/blog/entries/2019-11/programmingtoaninterface/</guid><description>Introduction A question that often arises is, what is the benefit of programming to an interface? This blog post will attempt to explain why. It is quite common for people to have heard of the term but do not really understand the significance of it.
The Fallacy It is important to understand that the interface word used here is actually the broader concept of what an interface is, it does not mean the Java Interface.</description></item><item><title>Foreign Key Constraint</title><link>https://jianliew.me/blog/entries/2019-11/foreignkeys/</link><pubDate>Sat, 09 Nov 2019 00:00:00 +1100</pubDate><guid>https://jianliew.me/blog/entries/2019-11/foreignkeys/</guid><description>Introduction The motivation for this blog entry is the following post on Hacker News titled &amp;ldquo;Thoughts on Foreign Key&amp;rdquo;. Link here
In the post, it is mentioned that &amp;ldquo;At GitHub we do not use foreign keys, ever, anywhere.&amp;quot;. This post is actually made by Shlomi Noach, who a principal Software Engineer at Github. Please do note that the post is actually dated Dec 10, 2016, this is about 3 years ago.</description></item></channel></rss>